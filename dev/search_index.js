var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpikingRasters","category":"page"},{"location":"#SpikingRasters","page":"Home","title":"SpikingRasters","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpikingRasters.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpikingRasters]","category":"page"},{"location":"#SpikingRasters.count_spikes-Union{Tuple{R}, Tuple{Vector{R}, R, R}} where R","page":"Home","title":"SpikingRasters.count_spikes","text":"count_spikes(Y::Vector{R},dt::R,Tend::R;Tstart::R=0.0) where R\n\nArguments\n\nY::Vector{<:Real} : vector of spike times\ndt::Real : time bin size\nTend::Real : end time for the raster\n\nOptional argument\n\nTstart::Real=0.0 : start time for the raster\n\nReturns\n\nbinned_spikes::Vector{<:Integer} : binned_spikes[k] is the number of spikes that occur    in the timebin k  (i.e. between Tstart + (k-1)*dt and Tstart + k*dt)\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRasters.detect_spikes-Union{Tuple{R}, Tuple{Vector{R}, R, R}} where R","page":"Home","title":"SpikingRasters.detect_spikes","text":"detect_spikes(Y::Vector{R},dt::R,Tend::R;Tstart::R=0.0) where R\n\nArguments\n\nY::Vector{<:Real} : vector of spike times\ndt::Real : time bin size\nTend::Real : end time for the raster\n\nOptional argument\n\nTstart::Real=0.0 : start time for the raster\n\nReturns\n\ndetected_spikes::Vector{<:Integer} : detected_spike[k] is true if  at least one spike has been found.\n\n\n\n\n\n","category":"method"},{"location":"#SpikingRasters.generate_spike_raster-Union{Tuple{C}, Tuple{R}, Tuple{SpikingRasters.SpikeTrainCollection{R}, R}} where {R, C<:ColorTypes.Color}","page":"Home","title":"SpikingRasters.generate_spike_raster","text":"generatespikeraster(trains::SpikeTrainCollection,       dt::Real;       spikesize::Integer = 5,       spikeseparator::Integer = 1,       backgroundcolor::Color=RGB(1.,1.,1.),       spikecolors::Union{C,Vector{C}}=RGB(0.,0.0,0.0),       max_size::Real=1E4) where C<:Color\n\nDraws a matrix that contains the raster plot of the spike train.\n\nArguments\n\nTrains :  The spike trains. \ndt : time interval representing one pixel horizontally  \n\nOptional arguments\n\nspike_size::Integer : heigh of spike (in pixels)\nspike_separator::Integer : space between spikes, and vertical padding\nbackground_color::Color : self-explanatory\nspike_colors::Union{Color,Vector{Color}} : if a single color, color of all spikes, if vector of colors,   color for each neuron (length should be same as number of neurons)\nmax_size::Integer : throws an error if image is larger than this number (in pixels)\n\nReturns\n\nraster_matrix::Matrix{Color} you can save it as a png file\n\n\n\n\n\n","category":"method"}]
}
